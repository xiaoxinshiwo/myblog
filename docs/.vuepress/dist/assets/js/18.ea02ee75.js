(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{58:function(e,t,n){"use strict";n.r(t);var r=n(0),a=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),n("authorAndTime",{attrs:{dateTime:"2018-06-07 15:03:29"}}),e._m(1),n("p",[e._v("为了保持内容为最新，建议每次阅读前先 pull 最新镜像")]),e._m(2),e._m(3),e._m(4),e._m(5),e._m(6),e._m(7),e._m(8),e._m(9),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14),e._m(15),e._m(16),e._m(17),e._m(18)],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"docker-入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-入门","aria-hidden":"true"}},[this._v("#")]),this._v(" docker 入门")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"docker-practice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-practice","aria-hidden":"true"}},[this._v("#")]),this._v(" docker practice")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ docker pull dockerpracticecn/docker_practice\n\n$ docker run -it --rm -d --name dockerPractice -p  4000:80  dockerpracticecn/docker_practice\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("之后打开浏览器，在地址栏输入 "),t("code",[this._v("127.0.0.1:4000")]),this._v(" 即可开始阅读。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"docker-常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-常用命令","aria-hidden":"true"}},[this._v("#")]),this._v(" docker 常用命令")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("# 获取mysql5.7版本的镜像\ndocker pull mysql:5.7.22\n# 启动一个 容器内3306映射本机3309的名为mysql 5.7.22的容器,不加版本则是运行latest\ndocker run -it --rm -d -p 3306:3306 --name mysql -v ~/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456  mysql:5.7.22\n# 启动redis,使用默认配置\ndocker run -it --rm -d -p 6379:6379 --name redis -v  ~/docker/redis:/var/lib/redis redis redis-server\n# 启动一个zookeeper\ndocker run -it --rm -d -p 2181:2181 --name zookeeper -v  ~/docker/zookeeper:/data  zookeeper\n# 启动tomcat\ndocker run -it -d --rm -p 8888:8080 --name tomcat7 -v ~/docker/tomcat7:/usr/local/tomcat/webapps/docker tomcat:7.0.88-jre8\n# 罗列所有的容器，包含已经停止的\ndocker ps -a\n# 停止一个容器 24ed9f74fa99为容器id，支持短id 如：24ed\ndocker stop 24ed9f74fa99\n# 罗列镜像\ndocker images / 或者 docker image ls\n# 罗列容器\ndocker container ls\n# 删除镜像\ndocker image rm mysql\n# 删除容器\ndocker rm containerId \n# 启动名为mysql的容器\ndocker start mysql  \n# 进入名为mysql的容器\ndocker exec -it mysql bash \n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"制作启动命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#制作启动命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 制作启动命令")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在实际开发中，开发者往往需要在本地启动"),t("code",[this._v("mysql/redis/zookeeper/elasticsearch/activemq")]),this._v("等\n下面的命令启动了mysql/redis/zookeeper三个应用，这样就可以一键启动了。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(" #runDevToolKit.sh\n # 启动mysql\n echo 'run mysql...'\n docker run -it --rm -d -p 3306:3306 --name mysql -v ~/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456  mysql:5.7.22\n # 启动启动redis\n echo 'run redis...'\n docker run -it --rm -d -p 6379:6379 --name redis -v  ~/docker/redis:/var/lib/redis redis redis-server\n # 启动启动zookeeper\n echo 'run zookeeper...'\n docker run -it --rm -d -p 2181:2181 --name zookeeper -v  ~/docker/zookeeper:/data  zookeeper\n # 查看所有运行的容器\n echo 'The running containers are...'\n docker ps -a\n \n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("# stopDevToolKit.sh\n# 停止所有容器\necho 'stop all containers...'\ndocker stop mysql\ndocker stop redis\ndocker stop zookeeper\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"制作容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#制作容器","aria-hidden":"true"}},[this._v("#")]),this._v(" 制作容器")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",{attrs:{start:"0"}},[t("li",[this._v("准备文件")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("创建空文件件(否则会出现build-context-for-docker-image-very-large问题) docker-build  see:https://stackoverflow.com/questions/26600769/build-context-for-docker-image-very-large\n往docker-build中添加文件：jre-8u171-linux-x64.tar.gz apache-tomcat-8.5.3.zip\n\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[this._v("编写Dockerfile")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('FROM ubuntu\n\nMAINTAINER created from zhangyognxin@f6car.com\n#把java与tomcat添加到容器中 tar.gz 会自动解压\nADD jre-8u171-linux-x64.tar.gz /usr/local/\nADD apache-tomcat-8.5.3.tar.gz /usr/local/\n\n#配置java与tomcat环境变量\nENV JAVA_HOME /usr/local/jre1.8.0_171\nENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nENV CATALINA_HOME /usr/local/apache-tomcat-8.5.3\nENV CATALINA_BASE /usr/local/apache-tomcat-8.5.3\nENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin\n\n#容器运行时监听的端口\nEXPOSE  8080\n\nCMD ["catalina.sh", "run"]\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",{attrs:{start:"2"}},[t("li",[this._v("切换至docker-build文件夹下执行命令")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('$ docker build -t tomcat8:jre8 .\nSending build context to Docker daemon   94.6MB\nStep 1/11 : FROM ubuntu:14.10\n ---\x3e a8a2ba3ce1a3\nStep 2/11 : MAINTAINER created from zhangyognxin@f6car.com\n ---\x3e Running in 81e5c424ac4d\nRemoving intermediate container 81e5c424ac4d\n ---\x3e 27002ba82d71\nStep 3/11 : ADD jre-8u171-linux-x64.tar.gz /usr/local/\n ---\x3e 60b29e76b22d\nStep 4/11 : ADD apache-tomcat-8.5.3.tar.gz /usr/local/\n ---\x3e adb5ed3881da\nStep 5/11 : ENV JAVA_HOME /usr/local/jre1.8.0_171\n ---\x3e Running in 18fe496e4d4a\nRemoving intermediate container 18fe496e4d4a\n ---\x3e 7716c6fa2809\nStep 6/11 : ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n ---\x3e Running in 2f0b2c8d4205\nRemoving intermediate container 2f0b2c8d4205\n ---\x3e 558b23f7cde4\nStep 7/11 : ENV CATALINA_HOME /usr/local/apache-tomcat-8.5.3\n ---\x3e Running in 4c902449a7e7\nRemoving intermediate container 4c902449a7e7\n ---\x3e b3cc8cb3da03\nStep 8/11 : ENV CATALINA_BASE /usr/local/apache-tomcat-8.5.3\n ---\x3e Running in 8f84f9f78f15\nRemoving intermediate container 8f84f9f78f15\n ---\x3e d254466d7ca0\nStep 9/11 : ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin\n ---\x3e Running in a86e0c15205a\nRemoving intermediate container a86e0c15205a\n ---\x3e 94a98f047d9b\nStep 10/11 : EXPOSE  8080\n ---\x3e Running in 8e01c39824cd\nRemoving intermediate container 8e01c39824cd\n ---\x3e 39d8a8b05172\nStep 11/11 : CMD ["catalina.sh", "run"]\n ---\x3e Running in b315b22125ae\nRemoving intermediate container b315b22125ae\n ---\x3e 8e145b187fd5\nSuccessfully built 8e145b187fd5\nSuccessfully tagged tomcat8:jre8\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",{attrs:{start:"3"}},[t("li",[this._v("启动")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("docker run -it -d --rm -p 8888:8080 --name tomcat8 -v ~/docker/tomcat8:/usr/local/apache-tomcat-8.5.3/webapps/docker tomcat8:jre8\n\n")])])}],!1,null,null,null);t.default=a.exports}}]);