(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{55:function(n,t,e){"use strict";e.r(t);var s=e(0),_=Object(s.a)({},function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"content"},[n._m(0),e("authorAndTime",{attrs:{dateTime:"2018-11-06 09:42:01"}}),n._m(1),e("p",[n._v("根据mysql官方文档我们可以知道SELECT … FOR UPDATE可以给查询到的关联记录加上读锁的，能够阻止其他的事务更新这些行。\n在实际的项目中，订单的流水号的规则如下CGD + 20181011 + 00001 程序调用的function如下：")]),n._m(2),n._m(3),n._m(4),e("p",[n._v("session2:")]),n._m(5),n._m(6),n._m(7),e("p",[n._v("session1:")]),n._m(8),e("p",[n._v("session2:")]),n._m(9),e("p",[n._v("综上我们得出结论，在使用select … for update 企图锁定行的时候最好能够使用索引锁定唯一的行，否则就会造成锁表，或者锁定的数据范围太大，造成性能很差的结果。")])],1)},[function(){var n=this.$createElement,t=this._self._c||n;return t("h1",{attrs:{id:"mysql-select-…-for-update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql-select-…-for-update","aria-hidden":"true"}},[this._v("#")]),this._v(" Mysql select … for update")])},function(){var n=this.$createElement,t=this._self._c||n;return t("blockquote",[t("p",[this._v("对于搜索遇到的索引记录，锁定行和任何关联的索引条目，就像您UPDATE为这些行发出 语句一样。阻止其他事务更新这些行，执行SELECT … LOCK IN SHARE MODE或从某些事务隔离级别读取数据。一致性读取将忽略在读取视图中存在的记录上设置的任何锁定。"),t("br"),this._v("\n对于锁定读取 （SELECT使用FOR UPDATE或LOCK IN SHARE MODE）， UPDATE和 DELETE语句，所采用的锁取决于语句是使用具有唯一搜索条件的唯一索引还是范围类型搜索条件。"),t("br"),this._v("\n对于具有唯一搜索条件的唯一索引， InnoDB仅锁定找到的索引记录，而不是之前的间隙。"),t("br"),this._v("\n对于其他搜索条件以及非唯一索引， InnoDB锁定扫描的索引范围，使用间隙锁或 下一键锁定 来阻止其他会话插入范围所涵盖的间隙。有关间隙锁和下一键锁的信息，请参见第14.6.1节“InnoDB锁定”。")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("--- genatorBillNo\nCREATE DEFINER=`root`@`%` FUNCTION `genatorBillNo`(bill_type VARCHAR(10),bill_date VARCHAR(40),id_own_org BIGINT UNSIGNED) RETURNS varchar(255) CHARSET utf8\nBEGIN\nDECLARE newBillNo VARCHAR(20) DEFAULT '';\t#生成最新单据号\nDECLARE seq BIGINT DEFAULT 0;\t\t\t\t\t\t\t\t#当前单据序列\nDECLARE seqStr VARCHAR(10) DEFAULT '';\t\t#序列补0\nSELECT next_sn INTO seq FROM tm_billno_sn  s WHERE\n\ts.business_type = bill_type  AND DATE_FORMAT(s.sn_date,'%Y-%m-%d')= bill_date AND s.id_own_org = id_own_org FOR UPDATE;\nIF seq = 0 THEN\n\tINSERT INTO tm_billno_sn(pk_id,business_type,next_sn,id_own_org,sn_date)\n\t\t\tVALUES (UUID_SHORT(),bill_type,002,id_own_org, DATE_FORMAT( bill_date, '%Y-%m-%d'));\n  SET seq = 001;\nELSE\n\tUPDATE tm_billno_sn n SET next_sn = n.next_sn+1 WHERE\n\t\t\tn.business_type = bill_type AND DATE_FORMAT(n.sn_date,'%Y-%m-%d')= bill_date AND n.id_own_org = id_own_org ;\nEND IF;\nSET seqStr = LPAD(seq,3,'0');\nSET newBillNo = CONCAT(bill_type,DATE_FORMAT(bill_date,'%Y%m%d'),seqStr);\nRETURN newBillNo;\nEND\n--- tm_billno_sn\nCREATE TABLE `tm_billno_sn` (\n  `pk_id` bigint(20) unsigned NOT NULL COMMENT '主键',\n  `business_type` char(10) DEFAULT NULL COMMENT '业务类型',\n  `next_sn` bigint(20) unsigned DEFAULT NULL COMMENT '当前流水号',\n  `id_own_org` bigint(20) unsigned DEFAULT NULL COMMENT '组织',\n  `sn_date` date DEFAULT NULL COMMENT '归零日期',\n  PRIMARY KEY (`pk_id`),\n  KEY `IDX_SN_DATE` (`sn_date`),\n  KEY `IDX_ID_OWN_ORG` (`id_own_org`) USING BTREE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;\n")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("p",[this._v("我们碰到了这样的问题：当同一个公司（id_own_org）生成流水号所在的事务超长时，本公司生成其他订单流水也会超时，但是我们的初衷是"),t("code",[this._v("锁定该公司当天特定类型的行")]),this._v("，怎么本公司的其他类型的行也锁定了呢？\n根据官方文档的解释"),t("code",[this._v("对于其他搜索条件以及非唯一索引， InnoDB锁定扫描的索引范围")]),this._v("这里我们只用到了"),t("code",[this._v("IDX_ID_OWN_ORG")]),this._v("这个索引，而这个索引是单列的，所以该公司下所有的记录条数都被锁定了。\n下面我们来做下试验。使用mysql命令行分别开启两个session.\nsession1:")])},function(){var n=this.$createElement,t=this._self._c||n;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("mysql> use test\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql> set autocommit=off;\nQuery OK, 0 rows affected (0.00 sec)\nmysql>  begin;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT next_sn FROM tm_billno_sn  s WHERE\n    -> s.business_type = 'SKD'  AND DATE_FORMAT(s.sn_date,'%Y-%m-%d')= '2018-11-04' AND s.id_own_org = 10545511425563128134 FOR UPDATE;\n+---------+\n| next_sn |\n+---------+\n|       2 |\n+---------+\n1 row in set (0.25 sec)\n")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("mysql> UPDATE tm_billno_sn n SET next_sn = n.next_sn+1 WHERE n.business_type = 'YSF' AND DATE_FORMAT(n.sn_date,'%Y-%m-%d')= '2018-11-04' AND n.id_own_org = 10545511425563128134 ;\nERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction\n")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("p",[this._v("由此可以验证同一公司（id_own_org）的不同类型也是被锁定了的，肯定不行的。优化方法也很简单，将索引IDX_ID_OWN_ORG改建为"),t("code",[this._v("id_own_org和business_type")]),this._v("的联合索引，减小锁定的范围；\n或者先通过id_own_org、business_type、sn_date三者获取pk_id其他的操作使用主键索引，这样就可以锁定单行了。\n另外：如果索引创建的不合适，select…for update在执行的时候mysql认为效率低，或者锁定范围过大，则会造成锁表的情况，为了验证这一问题我们将"),t("code",[this._v("tm_billno_sn")]),this._v("的索引"),t("code",[this._v("IDX_ID_OWN_ORG")]),this._v("也删除。表结构如下：")])},function(){var n=this.$createElement,t=this._self._c||n;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("CREATE TABLE `tm_billno_sn` (\n  `pk_id` bigint(20) unsigned NOT NULL COMMENT '主键',\n  `business_type` char(10) DEFAULT NULL COMMENT '业务类型',\n  `next_sn` bigint(20) unsigned DEFAULT NULL COMMENT '当前流水号',\n  `id_own_org` bigint(20) unsigned DEFAULT NULL COMMENT '组织',\n  `sn_date` date DEFAULT NULL COMMENT '归零日期',\n  PRIMARY KEY (`pk_id`),\n  KEY `IDX_SN_DATE` (`sn_date`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;\n")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("mysql> begin;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT next_sn FROM tm_billno_sn  s WHERE\n    -> s.business_type = 'SKD'  AND DATE_FORMAT(s.sn_date,'%Y-%m-%d')= '2018-11-04' AND s.id_own_org = 10545511425563128134 FOR UPDATE;\n+---------+\n| next_sn |\n+---------+\n|       2 |\n+---------+\n1 row in set (27.57 sec)\n")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("mysql> UPDATE tm_billno_sn n SET next_sn = n.next_sn+1 WHERE n.business_type = 'YSF' AND DATE_FORMAT(n.sn_date,'%Y-%m-%d')= '2018-11-04' AND n.id_own_org = 10545511425561984440 ;\nERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction\n")])])}],!1,null,null,null);t.default=_.exports}}]);